version: "3.7"

services:
  nginx:
    image: nginx:1.15.1
    container_name: proxy
    restart: unless-stopped
    volumes:
      - ./services/proxy/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./services/proxy/proxy.conf:/etc/nginx/proxy.conf:ro
    ports:
      - "80:80"
    command: [nginx-debug, '-g', 'daemon off;']
    networks:
      - authorization_net
  db:
    image: mysql
    platform: linux/x86_64
    command: --default-authentication-plugin=mysql_native_password
    container_name: ${PROJECT_NAME}-db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USER}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_ALLOW_EMPTY_PASSWORD: "false"
      MYSQL_TCP_PORT: ${DB_PORT}
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "0.0.0.0:${DB_PORT}:${DB_PORT}"
    networks:
      - authorization_net

  api1:
    image: ${PROJECT_NAME}-api
    build:
      context: ./services/api
      dockerfile: Dockerfile
    tty: true
    environment:
      NODE_ENV: development
      ENVIRONMENT: development
      FORCE_COLOR: 1
    restart: always
    depends_on:
      - db
    env_file:
      - .env
    volumes:
      - ./services/api:/api
      - /api/node_modules
    networks:
      - authorization_net

  api2:
    image: ${PROJECT_NAME}-api
    build:
      context: ./services/api
      dockerfile: Dockerfile
    tty: true
    environment:
      NODE_ENV: development
      ENVIRONMENT: development
      FORCE_COLOR: 1
    restart: always
    depends_on:
      - db
    env_file:
      - .env
    volumes:
      - ./services/api:/api
      - /api/node_modules
    networks:
      - authorization_net

  api3:
    image: ${PROJECT_NAME}-api
    build:
      context: ./services/api
      dockerfile: Dockerfile
    tty: true
    environment:
      NODE_ENV: development
      ENVIRONMENT: development
      FORCE_COLOR: 1
    restart: always
    depends_on:
      - db
    env_file:
      - .env
    volumes:
      - ./services/api:/api
      - /api/node_modules
    networks:
      - authorization_net

volumes:
  mysql_data:

networks:
  authorization_net:
    driver: bridge
