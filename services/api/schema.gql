# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Author {
  age: Int!
  books: [Book!]
  country: String
  id: Int!
  name: String!
}

type Book {
  author: Author
  authorId: Float!
  id: Int!
  isPublished: Boolean!
  title: String!
}

input CreateAuthorInput {
  age: Int!
  country: String
  name: String!
}

input CreateBookInput {
  authorId: Int!
  isPublished: Boolean
  title: String
}

input CreateRoleInput {
  description: String
  name: String!
  permissionIds: [String!]
}

input CreateUserInput {
  accessToken: String
  email: String!
  firstName: String!
  lastName: String!
  password: String!
  refreshToken: String
  roleIds: [String!]
  username: String!
}

input LoginInput {
  password: String!
  username: String!
}

type Mutation {
  createAuthor(data: CreateAuthorInput!): Author!
  createBook(data: CreateBookInput!): Book!
  createRole(data: CreateRoleInput!): Role!
  createUser(data: CreateUserInput!): User!
  deleteAuthor(id: Int!): Float!
  deleteBook(id: Int!): Int!
  deleteMe: String!
  deleteRole(id: String!): String!
  deleteUser(id: String!): String!
  login(data: LoginInput!): UserSession!
  logout(data: String!): String!
  refreshToken(data: RefreshTokenInput!): UserSession!
  updateAuthor(data: UpdateAuthorInput!, id: Int!): Author!
  updateBook(data: UpdateBookInput!, id: Int!): Book!
  updateRole(data: UpdateRoleInput!): Role!
  updateUser(data: UpdateUserInput!): User!
}

type Permission {
  description: String
  id: String!
  name: String!
}

type Query {
  author(id: Int!): Author!
  authors(limit: Float, offset: Float): [Author!]!
  book(id: Int!): Book!
  books(limit: Float, offset: Float): [Book!]!
  getMyProfile: User!
  getOne(id: String!): User!
  hello: String!
  role(id: Int!): Role!
  roles(limit: Float, offset: Float): [Role!]!
  users(limit: Float, offset: Float): [User!]!
}

input RefreshTokenInput {
  refreshToken: String!
}

type Role {
  description: String
  id: String!
  name: String!
  permissions: [Permission!]
}

input UpdateAuthorInput {
  age: Int
  country: String
  name: String
}

input UpdateBookInput {
  authorId: Int
  isPublished: Boolean
  title: String
}

input UpdateRoleInput {
  description: String
  id: String!
  name: String
  permissionIds: [String!]
}

input UpdateUserInput {
  accessToken: String
  email: String
  firstName: String
  id: String!
  lastName: String
  password: String
  refreshToken: String
  roleIds: [String!]
  username: String
}

type User {
  accessToken: String
  email: String!
  emailVerified: Boolean
  enabled: Boolean!
  firstName: String!
  id: String!
  lastName: String!
  refreshToken: String
  roles: [Role!]
  username: String!
}

type UserSession {
  accessToken: String
  email: String!
  emailVerified: Boolean
  enabled: Boolean!
  firstName: String!
  id: String!
  lastName: String!
  refreshToken: String
  roles: [Role!]
  username: String!
}
