import { LoginDocument, LogoutDocument } from '@graphql/autogenerated/hooks';
import { userState } from '@graphql/cache/userState';
import { client } from '@graphql/client';
import { parseJwt } from '@utils/general/parseJwt';

export const getToken = async () => {
  const user = userState.get();
  if (!user.accessToken) {
    const decodedRefreshToken = parseJwt(user.refreshToken as string);
    console.log(decodedRefreshToken);
  }
  return user.accessToken;
};

export const login = async (username: string, password: string) => {
  try {
    const result = await client.mutate({
      mutation: LoginDocument,
      variables: { username, password },
    });
    userState.set(result.data.login);
    return result;
  } catch (err) {
    console.error(err);
    return null;
  }
};

export const logout = async () => {
  try {
    const result = await client.mutate({
      mutation: LogoutDocument,
    });
    userState.reset();
    return result;
  } catch (err) {
    console.error(err);
    return null;
  }
};
