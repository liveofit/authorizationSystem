# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Author {
  id: Int!
  name: String!
  country: String
  age: Int!
  books: [Book!]
}

type Book {
  id: Int!
  title: String!
  isPublished: Boolean!
  authorId: Float!
  author: Author
}

input CreateAuthorInput {
  name: String!
  country: String
  age: Int!
}

input CreateBookInput {
  title: String
  authorId: Int!
  isPublished: Boolean
}

input CreateRoleInput {
  name: String!
  description: String
}

input CreateUserInput {
  username: String!
  password: String!
  enabled: Boolean!
  firstName: String!
  lastName: String!
  email: String!
  relatedRoleIds: [String!]!
}

type Log {
  id: Int!
  operation: String!
  operationType: String!
  payload: String!
  unixStartTime: Float!
  executionTime: Float!
  resultPayload: String!
}

type Mutation {
  createBook(data: CreateBookInput!): Book!
  updateBook(data: UpdateBookInput!, id: Int!): Book!
  deleteBook(id: Int!): Int!
  createAuthor(data: CreateAuthorInput!): Author!
  updateAuthor(data: UpdateAuthorInput!, id: Int!): Author!
  deleteAuthor(id: Int!): Float!
  createUser(data: CreateUserInput!): User!
  updateUser(data: UpdateUserInput!, id: String!): User!
  deleteUser(id: String!): String!
  createRole(data: CreateRoleInput!): Role!
  updateRole(data: UpdateRoleInput!, id: String!): Role!
  deleteRole(id: String!): String!
}

type Query {
  hello: String!
  books(offset: Float, limit: Float): [Book!]!
  book(id: Int!): Book!
  authors(offset: Float, limit: Float): [Author!]!
  author(id: Int!): Author!
  logs(timeEnd: Float, timeStart: Float, offset: Float, limit: Float): [Log!]!
  users(offset: Float, limit: Float): [User!]!
  user(id: String!): User!
  roles(offset: Float, limit: Float): [Role!]!
  role(id: Int!): Role!
}

type Role {
  id: String!
  name: String!
  description: String
}

type Subscription {
  logsSubscription: Log!
}

input UpdateAuthorInput {
  name: String
  country: String
  age: Int
}

input UpdateBookInput {
  title: String
  authorId: Int
  isPublished: Boolean
}

input UpdateRoleInput {
  name: String
  description: String
}

input UpdateUserInput {
  username: String
  password: String
  enabled: Boolean
  firstName: String
  lastName: String
  email: String
  relatedRoleIds: [String!]
}

type User {
  id: String!
  username: String!
  password: String
  enabled: Boolean!
  totp: Boolean
  emailVerified: Boolean
  firstName: String!
  lastName: String!
  email: String!
  disableableCredentialTypes: [String!]
  requiredActions: [String!]
  notBefore: Int
  roles: [Role!]
  relatedRoleIds: [String!]
}
